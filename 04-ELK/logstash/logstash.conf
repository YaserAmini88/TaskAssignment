input {
  beats {
    port => 5044
  }
}

filter {
 grok {
   match => [ "message", "%{IPORHOST:hostname} %{IPORHOST:remote_ip} %{DATA:request_id} - \[%{HTTPDATE:access_time}\] \"%{WORD:http_method} %{DATA:url} HTTP/%{NUMBER:http_version}\"  %{NUMBER:response_code} %{NUMBER:body_sent_bytes} \"%{DATA:referrer}\" \"%{DATA:user_agent}\" rt=%{DATA:request_time} ua=\"%{DATA:upstream_address}\" us=\"%{DATA:upstream_status}\" ut=\"%{DATA:upstream_time}\" ul=\"%{DATA:ul}\""]
   overwrite => [ "message" ]
 }
 mutate {
   convert => ["response", "integer"]
   convert => ["response_code", "integer"]
   convert => ["bytes", "integer"]
   convert => ["request_time", "float"]
   convert => ["upstream_response_time", "float"]
   add_field => {
       "[nginx][read_timestamp]" => "%{@timestamp}"
   }
 }
 date {
   match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
   remove_field => [ "timestamp" ]
 }
}

output {
  if [fields][log_type] == "access" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "access"
      manage_template => true
      template_name => "accesslog"
    }
  }

  if [fields][log_type] == "error" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "error"
      manage_template => true
      template_name => "errorlog"
    }
  }
}
